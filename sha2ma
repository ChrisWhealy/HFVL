# (a and b) xor (a and c) xor (b and c)
# boxes a, b, and c are input

Frame 1:
    $modifyTitle(text='Ma Function Bit Visualization', color='red')
    $drawBox(a1by,50,800,170,30,text='A Bytes')
    $drawBox(a1bi,50,720,170,50,text='A Bits')
    $drawBox(b1bi,50,660,170,50,text='B Bits')
    $drawBox(b1by,50,600,170,30,text='B Bytes')

    $drawBox(a2by,50,540,170,30,text='A Bytes')
    $drawBox(a2bi,50,460,170,50,text='A Bits')
    $drawBox(c1bi,50,400,170,50,text='C Bits')
    $drawBox(c1by,50,340,170,30,text='C Bytes')

    $drawBox(b2by,270,280,170,30,text='B Bytes')
    $drawBox(b2bi,270,200,170,50,text='B Bits')
    $drawBox(c2bi,270,140,170,50,text='C Bits')
    $drawBox(c2by,270,80,170,30,text='C Bytes')

    $db(and1,270,690,50,50,text='AND')
    $db(and2,270,430,50,50,text='AND')

    $db(aandb,370,690,170,50,text='A and B')
    $db(aandc,370,430,170,50,text='A and C')

    $db(xor1,490,560,50,50,text='XOR')
    $db(aaboaac,590,560,170,50,text='A and B xor A and C')

    $db(and3,490,170,50,50,text='AND')
    $db(bandc,590,170,170,50,text='B and C')

    $db(xor2,710,365,50,50,text='XOR')
    $db(outbi,810,365,170,50,text='Output Bits')

    $db(outby,1030,365,150,50,text='Output Bytes')

    $da(a1by,a1bi)
    $da(a2by,a2bi)
    $da(b1by,b1bi)
    $da(c1by,c1bi)
    $da(b2by,b2bi)
    $da(c2by,c2bi)

    $da(b1bi,and1)
    $da(a1bi,and1)

    $da(c1bi,and2)
    $da(a2bi,and2)

    $da(c2bi,and3)
    $da(b2bi,and3)

    $da(and1,aandb)
    $da(and2,aandc)
    $da(and3,bandc)

    $da(aandb,xor1)
    $da(aandc,xor1)

    $da(xor1,aaboaac)

    $da(aaboaac,xor2)
    $da(bandc,xor2)

    $da(xor2,outbi)
    $da(outbi,outby)
Frame End

Frame 2:
    $mb(a1by,color=blue,bold=True,text=*a)
    $mb(a2by,color=blue,bold=True,text=*a)
    $mb(b1by,color=blue,bold=True,text=*b)
    $mb(b2by,color=blue,bold=True,text=*b)
    $mb(c1by,color=blue,bold=True,text=*c)
    $mb(c2by,color=blue,bold=True,text=*c)
Frame End

Frame 3:
    $ma(a1by,a1bi,color=blue)
    $ma(a2by,a2bi,color=blue)
    $ma(b1by,b1bi,color=blue)
    $ma(b2by,b2bi,color=blue)
    $ma(c1by,c1bi,color=blue)
    $ma(c2by,c2bi,color=blue)
    $mb(a1bi,color=blue,bold=True)
    $mb(a2bi,color=blue,bold=True)
    $mb(b1bi,color=blue,bold=True)
    $mb(b2bi,color=blue,bold=True)
    $mb(c1bi,color=blue,bold=True)
    $mb(c2bi,color=blue,bold=True)
Frame End

Frame 4:
    $mb(a1bi,color=blue,bold=True,text=@bytebit(*a))
    $mb(a2bi,color=blue,bold=True,text=@bytebit(*a))
    $mb(b1bi,color=blue,bold=True,text=@bytebit(*b))
    $mb(b2bi,color=blue,bold=True,text=@bytebit(*b))
    $mb(c1bi,color=blue,bold=True,text=@bytebit(*c))
    $mb(c2bi,color=blue,bold=True,text=@bytebit(*c))
Frame End

Frame 5:
    $rb(a1bi)
    $rb(a2bi)
    $rb(b1bi)
    $rb(b2bi)
    $rb(c1bi)
    $rb(c2bi)
    $rb(a1by)
    $rb(a2by)
    $rb(b1by)
    $rb(b2by)
    $rb(c1by)
    $rb(c2by)
    $ra(a1by,a1bi)
    $ra(a2by,a2bi)
    $ra(b1by,b1bi)
    $ra(b2by,b2bi)
    $ra(c1by,c1bi)
    $ra(c2by,c2bi)
Frame End

Frame 6:
    $mb(a1bi,color=green,bold=True)
    $mb(b1bi,color=green,bold=True)
    $ma(a1bi,and1,color=green)
    $ma(b1bi,and1,color=green)
Frame End

Frame 7:
    $mb(and1,color=red,bold=True)
    $ma(and1,aandb,color=red)
Frame End

Frame 8:
    $mb(aandb,color=red,bold=True,text=@and(*a1bi;*b1bi))
Frame End

Frame 9:
    $rb(aandb)
    $rb(and1)
    $rb(a1bi)
    $rb(b1bi)
    $ra(and1,aandb)
    $ra(a1bi,and1)
    $ra(b1bi,and1)
Frame End

Frame 10:
    $mb(a2bi,color=green,bold=True)
    $mb(c1bi,color=green,bold=True)
    $ma(a2bi,and2,color=green)
    $ma(c1bi,and2,color=green)
Frame End

Frame 11:
    $mb(and2,color=red,bold=True)
    $ma(and2,aandc,color=red)
Frame End

Frame 12:
    $mb(aandc,color=red,bold=True,text=@and(*a2bi;*c1bi))
Frame End

Frame 13:
    $rb(aandc)
    $rb(and2)
    $rb(a2bi)
    $rb(c1bi)
    $ra(and2,aandc)
    $ra(a2bi,and2)
    $ra(c1bi,and2)
Frame End

Frame 14:
    $mb(aandb,color=green,bold=True)
    $mb(aandc,color=green,bold=True)
    $ma(aandb,xor1,color=green)
    $ma(aandc,xor1,color=green)
Frame End

Frame 15:
    $mb(xor1,color=red,bold=True)
    $ma(xor1,aaboaac,color=red)
Frame End

Frame 16:
    $mb(aaboaac,color=red,bold=True,text=@xor(*aandb;*aandc))
Frame End

Frame 17:
    $rb(aaboaac)
    $rb(xor1)
    $rb(aandb)
    $rb(aandc)
    $ra(xor1,aaboaac)
    $ra(aandb,xor1)
    $ra(aandc,xor1)
Frame End

Frame 18:
    $mb(b2bi,color=green,bold=True)
    $mb(c2bi,color=green,bold=True)
    $ma(b2bi,and3,color=green)
    $ma(c2bi,and3,color=green)
Frame End

Frame 19:
    $mb(and3,color=red,bold=True)
    $ma(and3,bandc,color=red)
Frame End

Frame 20:
    $mb(bandc,color=red,bold=True,text=@and(*b2bi;*c2bi))
Frame End

Frame 21:
    $rb(bandc)
    $rb(and3)
    $rb(b2bi)
    $rb(c2bi)
    $ra(and3,bandc)
    $ra(b2bi,and3)
    $ra(c2bi,and3)
Frame End

Frame 22:
    $mb(aaboaac,color=green,bold=True)
    $mb(bandc,color=green,bold=True)
    $ma(aaboaac,xor2,color=green)
    $ma(bandc,xor2,color=green)
Frame End

Frame 23:
    $mb(xor2,color=red,bold=True)
    $ma(xor2,outbi,color=red)
Frame End

Frame 24:
    $mb(outbi,color=red,bold=True,text=@xor(*bandc;*aaboaac))
Frame End

Frame 25:
    $rb(aaboaac)
    $rb(bandc)
    $rb(xor2)
    $rb(outbi)
    $ra(xor2,outbi)
    $ra(aaboaac,xor2)
    $ra(bandc,xor2)
Frame End

Frame 26:
    $mb(outbi,color=blue,bold=True)
    $ma(outbi,outby,color=blue)
Frame End

Frame 27:
    $mb(outby,color=blue,bold=True,text=@bitbyte(*outbi))
Frame End

Frame 28:
    $mb(outby,color=red)
    $rb(outbi)
    $ra(outbi,outby)
Frame End
